// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Authentication fields
  username String @unique @db.VarChar(30)
  email    String @unique
  password String

  // Profile fields
  firstName String? @db.VarChar(50)
  lastName  String? @db.VarChar(50)
  avatar    String?
  bio       String? @db.Text

  // Account status
  isActive Boolean @default(false)

  // Activation tokens
  activationToken        String?
  activationTokenExpires DateTime?

  // Password reset tokens
  resetPasswordToken   String?
  resetPasswordExpires DateTime?

  // Refresh token (for persistent login)
  refreshToken         String?  @unique // Store the refresh token string
  refreshTokenExpires  DateTime? // When this refresh token expires

  // Activity tracking
  lastLoginAt DateTime?

  // Relations (will be added later)
  // posts     Post[]
  // comments  Comment[]
  // likes     Like[]
  // followers Follow[] @relation("UserFollowers")
  // following Follow[] @relation("UserFollowing")

  @@map("users")
}